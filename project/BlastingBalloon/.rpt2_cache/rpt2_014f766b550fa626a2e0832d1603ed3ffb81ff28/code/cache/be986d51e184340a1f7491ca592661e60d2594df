{
  "code": "export var Tools;\r\n(function (Tools) {\r\n    function random(n, m) {\r\n        m = m || 10;\r\n        const c = m - n + 1;\r\n        return Math.floor(Math.random() * c + n);\r\n    }\r\n    Tools.random = random;\r\n    function getRandomArrayElements(arr, count) {\r\n        var shuffled = arr.slice(0), i = arr.length, min = i - count, temp, index;\r\n        while (i-- > min) {\r\n            index = Math.floor((i + 1) * Math.random());\r\n            temp = shuffled[index];\r\n            shuffled[index] = shuffled[i];\r\n            shuffled[i] = temp;\r\n        }\r\n        return shuffled.slice(min);\r\n    }\r\n    Tools.getRandomArrayElements = getRandomArrayElements;\r\n    function getArrayDifElements(arr, count) {\r\n        const result = [];\r\n        let i = 0;\r\n        for (i; i < count; i++) {\r\n            const temp = getDiffEle(arr.slice(), result, i);\r\n            result.push(temp);\r\n        }\r\n        return result;\r\n    }\r\n    Tools.getArrayDifElements = getArrayDifElements;\r\n    function getDiffEle(arr, result, place) {\r\n        let indexArr = [];\r\n        let i = 0;\r\n        for (i; i < arr.length - place; i++) {\r\n            indexArr.push(i);\r\n        }\r\n        const ranIndex = Math.floor(Math.random() * indexArr.length);\r\n        if (result.indexOf(arr[ranIndex]) === -1) {\r\n            const backNum = arr[ranIndex];\r\n            arr[ranIndex] = arr[indexArr.length - 1];\r\n            return backNum;\r\n        }\r\n        else {\r\n            arr.splice(ranIndex, 1);\r\n            return getDiffEle(arr, result, place);\r\n        }\r\n    }\r\n    Tools.getDiffEle = getDiffEle;\r\n    Tools.roleDragCan = false;\r\n    function copydata(obj) {\r\n        const ret = {};\r\n        Object.getOwnPropertyNames(obj).forEach(name => {\r\n            ret[name] = obj[name];\r\n        });\r\n        return ret;\r\n    }\r\n    Tools.copydata = copydata;\r\n    function fillArray(value, len) {\r\n        var arr = [];\r\n        for (var i = 0; i < len; i++) {\r\n            arr.push(value);\r\n        }\r\n        return arr;\r\n    }\r\n    Tools.fillArray = fillArray;\r\n    function speedByAngle(angle, XY) {\r\n        if (angle % 90 === 0 || !angle) {\r\n            console.error(\"计算的角度异常,需要查看：\", angle);\r\n            return;\r\n        }\r\n        let speedXY = { x: 0, y: 0 };\r\n        speedXY.y = XY.y;\r\n        speedXY.x = speedXY.y / Math.tan(angle * Math.PI / 180);\r\n        return speedXY;\r\n    }\r\n    Tools.speedByAngle = speedByAngle;\r\n    function speedXYByAngle(angle, speed) {\r\n        if (angle % 90 === 0 || !angle) {\r\n        }\r\n        const speedXY = { x: 0, y: 0 };\r\n        speedXY.x = speed * Math.cos(angle * Math.PI / 180);\r\n        speedXY.y = speed * Math.sin(angle * Math.PI / 180);\r\n        return speedXY;\r\n    }\r\n    Tools.speedXYByAngle = speedXYByAngle;\r\n    function speedLabelByAngle(angle, speed, speedBate) {\r\n        const speedXY = { x: 0, y: 0 };\r\n        const selfAngle = angle;\r\n        const defaultSpeed = speed;\r\n        const bate = speedBate || 1;\r\n        if (selfAngle % 90 === 0) {\r\n            if (selfAngle === 0 || selfAngle === 360) {\r\n                speedXY.x = Math.abs(defaultSpeed) * bate;\r\n            }\r\n            else if (selfAngle === 90) {\r\n                speedXY.y = Math.abs(defaultSpeed) * bate;\r\n            }\r\n            else if (selfAngle === 180) {\r\n                speedXY.x = -Math.abs(defaultSpeed) * bate;\r\n            }\r\n            else {\r\n                speedXY.y = -Math.abs(defaultSpeed) * bate;\r\n            }\r\n        }\r\n        else {\r\n            const tempXY = Tools.speedXYByAngle(selfAngle, defaultSpeed);\r\n            speedXY.x = tempXY.x;\r\n            speedXY.y = tempXY.y;\r\n            if (selfAngle > 0 && selfAngle < 180) {\r\n                speedXY.y = Math.abs(speedXY.y) * bate;\r\n            }\r\n            else {\r\n                speedXY.y = -Math.abs(speedXY.y) * bate;\r\n            }\r\n            if (selfAngle > 90 && selfAngle < 270) {\r\n                speedXY.x = -Math.abs(speedXY.x) * bate;\r\n            }\r\n            else {\r\n                speedXY.x = Math.abs(speedXY.x) * bate;\r\n            }\r\n        }\r\n        return speedXY;\r\n    }\r\n    Tools.speedLabelByAngle = speedLabelByAngle;\r\n    function getRad(degree) {\r\n        return degree / 180 * Math.PI;\r\n    }\r\n    Tools.getRad = getRad;\r\n    function getRoundPos(angle, radius, centPos) {\r\n        var center = centPos;\r\n        var radius = radius;\r\n        var hudu = (2 * Math.PI / 360) * angle;\r\n        var X = center.x + Math.sin(hudu) * radius;\r\n        var Y = center.y - Math.cos(hudu) * radius;\r\n        return { x: X, y: Y };\r\n    }\r\n    Tools.getRoundPos = getRoundPos;\r\n    function converteNum(num) {\r\n        if (typeof (num) !== \"number\") {\r\n            console.warn(\"要转化的数字并不为number\");\r\n            return num;\r\n        }\r\n        let backNum;\r\n        if (num < 1000) {\r\n            backNum = \"\" + num;\r\n        }\r\n        else if (num < 1000000) {\r\n            backNum = \"\" + (num / 1000).toFixed(1) + \"k\";\r\n        }\r\n        else if (num < 10e8) {\r\n            backNum = \"\" + (num / 1000000).toFixed(1) + \"m\";\r\n        }\r\n        else {\r\n            backNum = \"\" + num;\r\n        }\r\n        return backNum;\r\n    }\r\n    Tools.converteNum = converteNum;\r\n})(Tools || (Tools = {}));\r\nexport default Tools;\r\n",
  "references": []
}
