{
  "code": "import { Enum } from \"../Template/Enum\";\r\nimport { Clicks } from \"../Template/Clicks\";\r\nexport default class GameControl extends Laya.Script {\r\n    constructor() {\r\n        super();\r\n    }\r\n    onEnable() {\r\n        this.slef = this.owner;\r\n        this.slef['GameControl'] = this;\r\n        this.levelsParameter();\r\n        this.adaptive();\r\n        this.createBalloonCollection();\r\n    }\r\n    adaptive() {\r\n        let stageH = Laya.stage.height;\r\n        this.slef.height = stageH;\r\n        this.Background.height = stageH;\r\n        this.Tip.y = stageH * 0.171;\r\n        this.BalloonVessel.y = stageH * 0.266;\r\n        this.BalloonVessel.height = stageH * 0.697;\r\n        let parentBoard = this.BalloonVessel.getChildByName('parentBoard');\r\n        parentBoard.height = stageH * 0.697;\r\n        this.BalloonParent.height = parentBoard.height - 100;\r\n        this.Grass.y = stageH;\r\n    }\r\n    levelsNodeAdaptive() {\r\n        let len = this.Levels.value.length;\r\n        let guan = this.LevelsNode.getChildByName('guan');\r\n        switch (len) {\r\n            case 1:\r\n                guan.x = 64;\r\n                break;\r\n            case 2:\r\n                guan.x = 72;\r\n                break;\r\n            default:\r\n                guan.x = 72;\r\n                break;\r\n        }\r\n    }\r\n    levelsParameter() {\r\n        this.Levels.value = '88';\r\n        this.levelsNodeAdaptive();\r\n        this.row = 4;\r\n        this.line = 5;\r\n        this.spacing = 5;\r\n        this.colorCategory = 5;\r\n    }\r\n    createBalloonCollection() {\r\n        let widthP = this.BalloonParent.width;\r\n        let heightP = this.BalloonParent.height;\r\n        for (let i = 0; i < this.row; i++) {\r\n            for (let j = 0; j < this.line; j++) {\r\n                let x = widthP / this.row * (i + 1) - widthP / (this.row * 2);\r\n                let y = heightP / this.line * (j + 1) - heightP / (this.line * 2);\r\n                let balloon = this.createBallon(x, y);\r\n                let scale = (widthP / this.row - this.spacing * 2) / balloon.width;\r\n                balloon.scale(scale, scale);\r\n                Clicks.balloonScale = scale;\r\n                balloon['Balloon'].cardClicksOn();\r\n            }\r\n        }\r\n        this.taskPromptSet();\r\n    }\r\n    createBallon(x, y) {\r\n        let balloon = Laya.Pool.getItemByCreateFun('balloon', this.balloon.create, this.balloon);\r\n        this.BalloonParent.addChild(balloon);\r\n        balloon.pos(x, y);\r\n        let img = balloon['Balloon'].img;\r\n        let random = Math.floor(Math.random() * this.colorCategory);\r\n        img.skin = Enum.ColorSkin[random];\r\n        balloon.name = Enum.ColorName[random];\r\n        return balloon;\r\n    }\r\n    taskPromptSet() {\r\n        let arr1 = [];\r\n        for (let i = 0; i < this.BalloonParent._children.length; i++) {\r\n            const balloon = this.BalloonParent._children[i];\r\n            arr1.push(balloon.name);\r\n        }\r\n        let arr2 = Array.from(new Set(arr1));\r\n        let len = arr2.length;\r\n        let widthP = len * 75;\r\n        this.TaskPrompt.width = widthP;\r\n        let heightP = this.TaskPrompt.height;\r\n        for (let j = 0; j < len; j++) {\r\n            let name = arr2[j];\r\n            let x = widthP / len * (j + 1) - widthP / (len * 2);\r\n            let y = heightP / 2;\r\n            let colorSkin = Enum.IconSkin_01[Enum.ColorName[name]];\r\n            this.createBallon_Icon(x, y, colorSkin);\r\n        }\r\n        this.TaskPrompt.pivotX = this.TaskPrompt.width / 2;\r\n        this.TaskPrompt.x = 375;\r\n        this.balloonCount();\r\n        this.balloonClickOrder();\r\n    }\r\n    balloonCount() {\r\n        this.clickOrderArr = [];\r\n        for (let j = 0; j < this.TaskPrompt._children.length; j++) {\r\n            let taskBallon = this.TaskPrompt._children[j];\r\n            let taskName = taskBallon.name;\r\n            for (let i = 0; i < this.BalloonParent._children.length; i++) {\r\n                let balloon = this.BalloonParent._children[i];\r\n                let name = balloon.name;\r\n                if (taskName === name) {\r\n                    let num = taskBallon['Balloon_Icon'].num;\r\n                    num.value = (Number(num.value) + 1).toString();\r\n                    this.clickOrderArr.push(name);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    balloonClickOrder() {\r\n        for (let i = 0; i < this.TaskPrompt._children.length; i++) {\r\n            const taskBallon = this.TaskPrompt._children[i];\r\n            const name = taskBallon.name;\r\n            let img = taskBallon['Balloon_Icon'].img;\r\n            if (name === this.clickOrderArr[0]) {\r\n                taskBallon.scale(1.1, 1.1);\r\n                img.skin = Enum.IconSkin_02[Enum.ColorName[name]];\r\n            }\r\n            else {\r\n                taskBallon.scale(1, 1);\r\n                img.skin = Enum.IconSkin_01[Enum.ColorName[name]];\r\n            }\r\n        }\r\n    }\r\n    createBallon_Icon(x, y, colorSkin) {\r\n        let balloon_icon = Laya.Pool.getItemByCreateFun('balloon_icon', this.balloon_icon.create, this.balloon_icon);\r\n        this.TaskPrompt.addChild(balloon_icon);\r\n        balloon_icon.pos(x, y);\r\n        let img = balloon_icon['Balloon_Icon'].img;\r\n        img.skin = colorSkin;\r\n        balloon_icon.name = Enum.ColorName[Enum.IconSkin_01[colorSkin]];\r\n        return balloon_icon;\r\n    }\r\n    onDisable() {\r\n    }\r\n}\r\n",
  "references": [
    "F:/Work/Game/03_BlastingBalloon/project/BlastingBalloon/src/Script/Template/WXDataManager.ts",
    "F:/Work/Game/03_BlastingBalloon/project/BlastingBalloon/src/Script/Template/Enum.ts",
    "F:/Work/Game/03_BlastingBalloon/project/BlastingBalloon/src/Script/Template/Clicks.ts"
  ]
}
